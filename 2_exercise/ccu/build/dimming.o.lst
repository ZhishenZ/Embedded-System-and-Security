   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"dimming.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.main,"ax",%progbits
  19              		.align	1
  20              		.global	main
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	main:
  26              	.LFB128:
  27              		.file 1 "dimming.c"
   1:dimming.c     **** #include <xmc_common.h>
   2:dimming.c     **** 
   3:dimming.c     **** void initCCU4(void);
   4:dimming.c     **** void connectLED(void);
   5:dimming.c     **** 
   6:dimming.c     **** int main(void) {
  28              		.loc 1 6 16
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
   7:dimming.c     **** 
   8:dimming.c     **** 
   9:dimming.c     ****   
  10:dimming.c     ****   initCCU4();
  40              		.loc 1 10 3
  41 0004 FFF7FEFF 		bl	initCCU4
  42              	.L2:
  11:dimming.c     **** 
  12:dimming.c     ****   while(1);
  43              		.loc 1 12 8 discriminator 1
  44 0008 FEE7     		b	.L2
  45              		.cfi_endproc
  46              	.LFE128:
  48              		.section	.text.initCCU4,"ax",%progbits
  49              		.align	1
  50              		.global	initCCU4
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	initCCU4:
  56              	.LFB129:
  13:dimming.c     ****   return 0;
  14:dimming.c     **** }
  15:dimming.c     **** 
  16:dimming.c     **** void initCCU4() {
  57              		.loc 1 16 17
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI2:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 00AF     		add	r7, sp, #0
  67              	.LCFI3:
  68              		.cfi_def_cfa_register 7
  17:dimming.c     ****   // release reset of th CCU4
  18:dimming.c     ****   // we have to configerate the CCU40RS in the PRCLR0 register
  19:dimming.c     ****   // base address of SCU is 0x50004000 
  20:dimming.c     ****   // the offset address of PRCLR0 is 0414 (in0x)
  21:dimming.c     ****   // *(0x50004414) = 0b100;
  22:dimming.c     ****   SCU_RESET->PRCLR0 = SCU_RESET_PRCLR0_CCU40RS_Msk;
  69              		.loc 1 22 12
  70 0004 0F4B     		ldr	r3, .L4
  71              		.loc 1 22 21
  72 0006 0422     		movs	r2, #4
  73 0008 5A61     		str	r2, [r3, #20]
  23:dimming.c     ****   
  24:dimming.c     ****   //step 3
  25:dimming.c     ****   SCU_CLK->CLKSET = SCU_CLK_CLKSET_CCUCEN_Msk;
  74              		.loc 1 25 10
  75 000a 0F4B     		ldr	r3, .L4+4
  76              		.loc 1 25 19
  77 000c 1022     		movs	r2, #16
  78 000e 5A60     		str	r2, [r3, #4]
  26:dimming.c     **** 
  27:dimming.c     ****   //step 4 
  28:dimming.c     ****   CCU40->GIDLC = CCU8_GIDLC_SPRB_Msk; 
  79              		.loc 1 28 8
  80 0010 0E4B     		ldr	r3, .L4+8
  81              		.loc 1 28 16
  82 0012 4FF48072 		mov	r2, #256
  83 0016 DA60     		str	r2, [r3, #12]
  29:dimming.c     ****   
  30:dimming.c     ****   //step 5 the lecturer said it's not necessary to configure this. just skip it. 
  31:dimming.c     **** 
  32:dimming.c     ****   //step 6 we have to configure period and compare in CCU4 
  33:dimming.c     **** 
  34:dimming.c     ****   //about glitch: The glitch occurs because the period and compare value are changed at an improper
  35:dimming.c     ****   // As I understood it, this occurs because the period and compare value changed inside a duty cyc
  36:dimming.c     ****   // we have to introduce the prescaler shadow compare and the time period shadow value.
  37:dimming.c     ****   CCU40_CC42->PRS = 0xFFFF;
  84              		.loc 1 37 13
  85 0018 0D4B     		ldr	r3, .L4+12
  86              		.loc 1 37 19
  87 001a 4FF6FF72 		movw	r2, #65535
  88 001e 5A63     		str	r2, [r3, #52]
  38:dimming.c     ****   //CCU40_CC42->PSC = 0b1011; // configure the prescaler to make the LED blinking
  39:dimming.c     ****   CCU40_CC42->CRS = 0xFFFF*(1-0.01);
  89              		.loc 1 39 13
  90 0020 0B4B     		ldr	r3, .L4+12
  91              		.loc 1 39 19
  92 0022 4FF66F52 		movw	r2, #64879
  93 0026 DA63     		str	r2, [r3, #60]
  40:dimming.c     ****   // the "2" from S2SE means "slide 2" from CC42
  41:dimming.c     ****   // we have to enable this register if we want to request a shadow transfer 
  42:dimming.c     ****   CCU40->GCSS = CCU4_GCSS_S2SE_Msk;
  94              		.loc 1 42 8
  95 0028 084B     		ldr	r3, .L4+8
  96              		.loc 1 42 15
  97 002a 4FF48072 		mov	r2, #256
  98 002e 1A61     		str	r2, [r3, #16]
  43:dimming.c     ****   
  44:dimming.c     **** 
  45:dimming.c     ****   //step 7 we can ommit this step, because the initial value is not important for this example. 
  46:dimming.c     **** 
  47:dimming.c     ****   //step 8
  48:dimming.c     ****   CCU40->GIDLC = CCU4_GIDLC_CS2I_Msk; 
  99              		.loc 1 48 8
 100 0030 064B     		ldr	r3, .L4+8
 101              		.loc 1 48 16
 102 0032 0422     		movs	r2, #4
 103 0034 DA60     		str	r2, [r3, #12]
  49:dimming.c     ****   //step 9 Since we do not need to start multiple slices in parallel, it is sufficient to use the T
  50:dimming.c     ****   CCU40_CC42->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
 104              		.loc 1 50 13
 105 0036 064B     		ldr	r3, .L4+12
 106              		.loc 1 50 21
 107 0038 0122     		movs	r2, #1
 108 003a DA60     		str	r2, [r3, #12]
  51:dimming.c     **** 
  52:dimming.c     ****   connectLED();
 109              		.loc 1 52 3
 110 003c FFF7FEFF 		bl	connectLED
  53:dimming.c     **** 
  54:dimming.c     **** }
 111              		.loc 1 54 1
 112 0040 00BF     		nop
 113 0042 80BD     		pop	{r7, pc}
 114              	.L5:
 115              		.align	2
 116              	.L4:
 117 0044 00440050 		.word	1342194688
 118 0048 00460050 		.word	1342195200
 119 004c 00C00040 		.word	1073790976
 120 0050 00C30040 		.word	1073791744
 121              		.cfi_endproc
 122              	.LFE129:
 124              		.section	.text.connectLED,"ax",%progbits
 125              		.align	1
 126              		.global	connectLED
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 131              	connectLED:
 132              	.LFB130:
  55:dimming.c     **** 
  56:dimming.c     **** void connectLED() {
 133              		.loc 1 56 19
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138 0000 80B4     		push	{r7}
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 4
 141              		.cfi_offset 7, -4
 142 0002 00AF     		add	r7, sp, #0
 143              	.LCFI5:
 144              		.cfi_def_cfa_register 7
  57:dimming.c     ****   
  58:dimming.c     ****   // To modify the P1.1 we need to set up the modus of this pin, which should be ALT3 and pull-push
  59:dimming.c     ****   // This can be found in the table 25-5
  60:dimming.c     ****   static const uint8_t PP_ALT3 = 0b10011;
  61:dimming.c     **** 
  62:dimming.c     **** 
  63:dimming.c     ****   //we need PORT1 because the LED is P1.1 
  64:dimming.c     ****   // And for PORT1 we need pin 1
  65:dimming.c     ****   // In the reference manuel P1.1 can be modified by the register Input/Output Control Register 0 P
  66:dimming.c     **** 
  67:dimming.c     ****   // PORT0_IOCR0_PC1_Msk can be searched by tipping "IOCR0"
  68:dimming.c     ****   PORT1->IOCR0 = (PORT1->IOCR0 & ~PORT0_IOCR0_PC1_Msk)|(PP_ALT3<<PORT0_IOCR0_PC1_Pos);
 145              		.loc 1 68 24
 146 0004 074B     		ldr	r3, .L7
 147 0006 1B69     		ldr	r3, [r3, #16]
 148              		.loc 1 68 32
 149 0008 23F47843 		bic	r3, r3, #63488
 150              		.loc 1 68 64
 151 000c 064A     		ldr	r2, .L7+4
 152 000e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 153 0010 D202     		lsls	r2, r2, #11
 154 0012 1146     		mov	r1, r2
 155              		.loc 1 68 8
 156 0014 034A     		ldr	r2, .L7
 157              		.loc 1 68 55
 158 0016 0B43     		orrs	r3, r3, r1
 159              		.loc 1 68 16
 160 0018 1361     		str	r3, [r2, #16]
  69:dimming.c     ****   // (PORT1->IOCR0 & ~PORT0_IOCR0_PC1_Msk) means that we delete the content from bit 11 to bit 15 i
  70:dimming.c     ****   //  we move PP_ALT3 = ob10011 to the 11th bit.
  71:dimming.c     **** }
 161              		.loc 1 71 1
 162 001a 00BF     		nop
 163 001c BD46     		mov	sp, r7
 164              	.LCFI6:
 165              		.cfi_def_cfa_register 13
 166              		@ sp needed
 167 001e 5DF8047B 		ldr	r7, [sp], #4
 168              	.LCFI7:
 169              		.cfi_restore 7
 170              		.cfi_def_cfa_offset 0
 171 0022 7047     		bx	lr
 172              	.L8:
 173              		.align	2
 174              	.L7:
 175 0024 00810248 		.word	1208123648
 176 0028 00000000 		.word	PP_ALT3.0
 177              		.cfi_endproc
 178              	.LFE130:
 180              		.section	.rodata
 183              	PP_ALT3.0:
 184 0000 13       		.byte	19
 185              		.text
 186              	.Letext0:
 187              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 188              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 189              		.file 4 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Infineon/XMC4500_series/Include/XMC4500.
DEFINED SYMBOLS
                            *ABS*:0000000000000000 dimming.c
     /tmp/ccUOI28H.s:19     .text.main:0000000000000000 $t
     /tmp/ccUOI28H.s:25     .text.main:0000000000000000 main
     /tmp/ccUOI28H.s:55     .text.initCCU4:0000000000000000 initCCU4
     /tmp/ccUOI28H.s:49     .text.initCCU4:0000000000000000 $t
     /tmp/ccUOI28H.s:131    .text.connectLED:0000000000000000 connectLED
     /tmp/ccUOI28H.s:117    .text.initCCU4:0000000000000044 $d
     /tmp/ccUOI28H.s:125    .text.connectLED:0000000000000000 $t
     /tmp/ccUOI28H.s:175    .text.connectLED:0000000000000024 $d
     /tmp/ccUOI28H.s:183    .rodata:0000000000000000 PP_ALT3.0
                           .group:0000000000000000 wm4.0.467689a90594456bf46c01d2d8793c7f
                           .group:0000000000000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:0000000000000000 wm4.ieeefp.h.77.c88535c35f465c05b101960cf0179075
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.a54b2d5c07711bc7320a3fea9f12cb56
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.xmc_device.h.61.ba2d082e12f51240746cffdd60d42b81
                           .group:0000000000000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:0000000000000000 wm4.core_cm4.h.32.6c6eb1c8daeca23ce7ba79c8e8120d52
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.91b63349961c35637933e4fba51b867b
                           .group:0000000000000000 wm4.core_cm4.h.172.fdd5a388a160bb6ff767b7d7ee212268
                           .group:0000000000000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:0000000000000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:0000000000000000 wm4.xmc_device.h.1460.8860499b404961ffcfbb8d1fefcb2146
                           .group:0000000000000000 wm4.xmc_common.h.92.3f4336a80569affab05a81145b87c2fc

NO UNDEFINED SYMBOLS
